;****************************************************************
;
; Copyright (c) 2001 - 2003
; Bruker BioSpin MRI GmbH
; D-76275 Ettlingen, Germany
;
; All Rights Reserved
; 
; FLASH - a gradient echo imaging method
;
;****************************************************************
;
; d0 - TR padding
; d1 - T1 padding
; d2 - T2 padding
; d3 = PVM_RiseTime
; d4 = PVM_RampTime
; d8 = CONFIG_amplifier_enable

#include <MRI.include>
preset off

define delay denab
define delay d4d10u
define delay d5d20u
define delay d0d40u
define delay d4d2


"denab =  d3 - de"
"d4d10u = d4 +10u"
"d5d20u = d5 +20u"
"d0d40u = d0 -40u"
"d4d2 = d4 + d2"
"l3 = l1 + ds"
"l5 = 1"

;------ Gustav ---

define loopcounter directions
if(NI==1)
{
"directions = 1"
}

if(NI==2)
{
"directions = 2"
}

if(NI==3)
{
"directions = 1"
}

if(NI==4)
{
"directions = 4"
}

if(NI>4)
{
"directions = 1"
}


define loopcounter firstonly
"firstonly = 1"

;-----------------




#include <PrepModulesHead.mod> 

subr FlowSatInit()

INIT_DEVICES

lgrad r2d<2d> = L[1]
zgrad r2d
lgrad r3d<3d> = L[2]
zgrad r3d



decr,   dgrad r2d
        lo to decr times DS

lgrad slice = NSLICES
zslice
        10u recph ph1
start,  10u

if(PVM_BlBloodOnOff)
{
#include <TriggerPerPhaseStep.mod>
}
subr BlBlood(ph0)

#include <TriggerPerPhaseStep.mod>
subr SliceSelIr()

subr Tagging()
;----------------------------------start of the main loop ----------
slice, 	10u fq8b:f1

#include <TriggerPerSlice.mod>
;-------------------------------test---preparation modules -------------
subr FlowSat()
subr SatSlices()
subr MagTrans()
subr FatSup()




;------- READOUT DIRECTION NUMBER 1 -------------------  GUSTAV ------
;----------- (X Y Z)  ------------------------------------------------


if "l5==1"
{

        d6	grad{(0)|(0)|(t9)}
;----------------------------------slice selection------------------	
	d3 	grad{(0)|(0)|(t0)} fq1:f1
        d8	gatepulse 1
	p0:sp0 	ph0
	d4d10u 	groff
if(PVM_ppgFlag1) ;long TE mode
{
        ;----------------------------------slice rephase--------------------
	d10 	grad{(0)|(0)|(t1)}
	d4d2 	groff
        ;----------------------------------read dephase + phase encoding----
        d11      grad{(t2)|r2d(t3)|r3d(t4)} 
	d4d10u   groff
}
if(!PVM_ppgFlag1) ;short TE mode
{
        ;----------------------slice rephase, read dephase, phase encoding----
	d10 	grad{(t2)|r2d(t3)|(t1)+r3d(t4)}
	d4d2 	groff
}
;----------------------------------frequency encoding---------------
        denab   grad{(t5)|(0)|(0)} 
	ADC_INIT_B(NOPH, ph2)  ;ph1 is used (see recph)
        aqq	ADC_START	
;----------------------------------read spoiler + phase encoding----
        d11     grad{(t6)|r2d(t7)|r3d(t8)} ; 2nd and 3rd dims
	d12     grad{(t6)| (0) | (0) }
	d3	groff
        d0	ADC_END

}   



;------- READOUT DIRECTION NUMBER 2 -------------------  GUSTAV ------
;----------- (-X Y Z) ------------------------------------------------


if "l5==2"
{

        d6	grad{(0)|(0)|(t9)}
;----------------------------------slice selection------------------	
	d3 	grad{(0)|(0)|(t0)} fq1:f1
        d8	gatepulse 1
	p0:sp0 	ph0
	d4d10u 	groff
if(PVM_ppgFlag1) ;long TE mode
{
        ;----------------------------------slice rephase--------------------
	d10 	grad{(0)|(0)|(t1)}
	d4d2 	groff
        ;----------------------------------read dephase + phase encoding----
        d11      grad{plusminus(t2)|r2d(t3)|r3d(t4)} 
	d4d10u   groff
}
if(!PVM_ppgFlag1) ;short TE mode
{
        ;----------------------slice rephase, read dephase, phase encoding----
	d10 	grad{plusminus(t2)|r2d(t3)|(t1)+r3d(t4)}
	d4d2 	groff
}
;----------------------------------frequency encoding---------------
        denab   grad{plusminus(t5)|(0)|(0)} 
	ADC_INIT_B(NOPH, ph2)  ;ph1 is used (see recph)
        aqq	ADC_START	
;----------------------------------read spoiler + phase encoding----
        d11     grad{plusminus(t6)|r2d(t7)|r3d(t8)} ; 2nd and 3rd dims
	d12     grad{plusminus(t6)| (0) | (0) }
	d3	groff
        d0	ADC_END

}   






;------- READOUT DIRECTION NUMBER 3 ------------  GUSTAV ------
;----------- (Y X Z) --------------------------------------------

if "l5==3"
{

        d6	grad{(0)|(0)|(t9)}
;----------------------------------slice selection------------------	
	d3 	grad{(0)|(0)|(t0)} fq1:f1
        d8	gatepulse 1
	p0:sp0 	ph0
	d4d10u 	groff
if(PVM_ppgFlag1) ;long TE mode
{
        ;----------------------------------slice rephase--------------------
	d10 	grad{(0)|(0)|(t1)}
	d4d2 	groff
        ;----------------------------------read dephase + phase encoding----
        d11      grad{r2d(t3)|(t2)|r3d(t4)} 
	d4d10u   groff
}
if(!PVM_ppgFlag1) ;short TE mode
{
        ;----------------------slice rephase, read dephase, phase encoding----
	d10 	grad{r2d(t3)|(t2)|(t1)+r3d(t4)}
	d4d2 	groff
}
;----------------------------------frequency encoding---------------
        denab   grad{(0)|(t5)|(0)} 
	ADC_INIT_B(NOPH, ph2)  ;ph1 is used (see recph)
        aqq	ADC_START	
;----------------------------------read spoiler + phase encoding----
        d11     grad{r2d(t7)|(t6)|r3d(t8)} ; 2nd and 3rd dims
	d12     grad{(0)|(t6)|(0)}
	d3	groff
        d0	ADC_END

}   




;------- READOUT DIRECTION NUMBER 4 ---------------  GUSTAV ------
;----------- (-Y X Z) --------------------------------------------

if "l5==4"
{

        d6	grad{(0)|(0)|(t9)}
;----------------------------------slice selection------------------	
	d3 	grad{(0)|(0)|(t0)} fq1:f1
        d8	gatepulse 1
	p0:sp0 	ph0
	d4d10u 	groff
if(PVM_ppgFlag1) ;long TE mode
{
        ;----------------------------------slice rephase--------------------
	d10 	grad{(0)|(0)|(t1)}
	d4d2 	groff
        ;----------------------------------read dephase + phase encoding----
        d11      grad{r2d(t3)*plusminus(100)|(t2)|r3d(t4)} 
	d4d10u   groff
}
if(!PVM_ppgFlag1) ;short TE mode
{
        ;----------------------slice rephase, read dephase, phase encoding----
	d10 	grad{r2d(t3)*plusminus(100)|(t2)|(t1)+r3d(t4)}
	d4d2 	groff
}
;----------------------------------frequency encoding---------------
        denab   grad{(0)|(t5)|(0)} 
	ADC_INIT_B(NOPH, ph2)  ;ph1 is used (see recph)
        aqq	ADC_START	
;----------------------------------read spoiler + phase encoding----
        d11     grad{r2d(t7)*plusminus(100)|(t6)|r3d(t8)} ; 2nd and 3rd dims
	d12     grad{(0)|(t6)|(0)}
	d3	groff
        d0	ADC_END

}   



1u igrad plusminus




;--------------- END OF DIRECTIONS -----------------------






;----------------------------------slice and movie/directions loop------------- GUSTAV ---------	
subr FlowSatInc()
if(NI > 1)
{
	"l5=l5+1"
        if "l5>directions" 
	{ 
	"l5=1" 
	}


	2.5u islice
	lo to slice times NI
}
        d20

;----------------------------------averaging loop-------------------
if(NA > 1)
{
	2.5u ipp1 ipp2
        2.5u recph ph1
	lo to start times NA
        2.5u rpp1 rpp2
        2.5u recph ph1
}



;----------------------------------2d loop--------------------------
	igrad r2d
	lo to start times l3
        "l3=l1"


;----------------------------------3d loop--------------------------
	igrad r3d
	lo to start times l2
        2.5u
        lo to start times NAE
        2.5u
#include <Evolution.mod>
        2.5u
        lo to start times NR
SETUP_GOTO(start)

exit

ph0 = 0 
ph1 = 0 2 1 3
ph2 = 0 2 3 1



	





